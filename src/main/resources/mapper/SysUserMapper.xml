<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunchao.hsh.dao.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.yunchao.hsh.model.SysUser" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="ROLE_ID" property="roleId" jdbcType="BIGINT" />
    <result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="REAL_NAME" property="realName" jdbcType="VARCHAR" />
    <result column="USER_LOCK" property="userLock" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
    <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP" />
    <result column="LAST_LOGIN_DATE" property="lastLoginDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="SysUserResp" type="com.yunchao.hsh.dto.resp.SysUserResp" extends="BaseResultMap">
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    ID, ROLE_ID,USER_NAME, PASSWORD, REAL_NAME, USER_LOCK, PHONE, CREATE_DATE, LAST_LOGIN_DATE
  </sql>

  <sql id="Base_Column_List_u" >
    u.ID, u.ROLE_ID,u.USER_NAME, u.PASSWORD, u.REAL_NAME, u.USER_LOCK, u.PHONE, u.CREATE_DATE, u.LAST_LOGIN_DATE
  </sql>
  <select id="findById" resultMap="SysUserResp" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from sys_user
    where ID = #{id,jdbcType=BIGINT}
  </select>

  <!-- 根据姓名和密码查讯 -->
  <select id="findByName"  resultMap="SysUserResp" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from sys_user
    where USER_NAME = #{userName}
  </select>

  <!-- 判断用户名的唯一 -->
  <select id="checkNameUnique" resultMap="SysUserResp" parameterType="java.lang.String" >
    select
    USER_NAME
    from sys_user
    where USER_NAME = #{userName}
  </select>

  <!-- 判断手机号的唯一 -->
  <select id="checkPhoneUnique" resultMap="SysUserResp" parameterType="java.lang.String" >
    select
    PHONE
    from sys_user
    where PHONE = #{phone}
  </select>
  <!-- 查询用户的集合-->
  <select id="findList" resultMap="SysUserResp" >
    select
    <include refid="Base_Column_List" />
    from sys_user order by id desc
  </select>
  <select id="findPage" resultMap="SysUserResp" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List_u"/>,r.NAME role_name
    from sys_user u
    LEFT JOIN sys_role r ON u.ROLE_ID = r.ID
    <where>
      1=1
      <if test="@Ognl@isNotEmpty(id)">
        and u.ID = #{id}
      </if>
      <if test="roleId != null and roleId != &quot;&quot;">
        and u.ROLE_ID = #{roleId}
      </if>
      <if test="userName != null and userName != &quot;&quot;">
        and u.USER_NAME LIKE '%${userName}%'
      </if>
      <if test="realname != null and realname != &quot;&quot;">
        and u.REAL_NAME LIKE '%${realname}%'
      </if>
      <if test="phone != null and phone != &quot;&quot;">
        and u.PHONE LIKE  '%${phone}%'
      </if>
      <if test="userLock != null and userLock != &quot;&quot;">
        and u.PHONE = #{phone}
      </if>
      <if test="createDate_lt != null and createDate_lt != &quot;&quot;">
        and u.CREATE_DATE &gt;= #{createDate_lt}
      </if>
      <if test="createDate_gt != null and createDate_lt != &quot;&quot;">
        and u.CREATE_DATE &lt;= #{createDate_gt}
      </if>
      <if test="lastLoginDate_lt != null and lastLoginDate_lt != &quot;&quot;">
        and u.LAST_LOGIN_DATE &gt;= #{createDate_lt}
      </if>
      <if test="lastLoginDate_gt != null and lastLoginDate_lt != &quot;&quot;">
        and u.LAST_LOGIN_DATE &lt;= #{createDate_gt}
      </if>
    </where>
  </select>

  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from sys_user
    where ID = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.yunchao.hsh.model.SysUser" >
    insert into sys_user (ID, ROLE_ID,USER_NAME, PASSWORD,
    REAL_NAME, PHONE, CREATE_DATE, LAST_LOGIN_DATE)
    values (#{id,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT},#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{realName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
    #{lastLoginDate,jdbcType=TIMESTAMP})
  </insert>

  <update id="update"    parameterType="com.yunchao.hsh.dto.resp.SysUserResp" >
    update sys_user
    <set>
      <if test="@Ognl@isNotEmpty(roleId)">
        ROLE_ID = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="@Ognl@isNotEmpty(userName)">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(password)">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(realName)">
        REAL_NAME =#{realName,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(phone)">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="@Ognl@isNotEmpty(createDate)">
        CREATE_DATE = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="@Ognl@isNotEmpty(lastLoginDate)">
        LAST_LOGIN_DATE = #{lastLoginDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id}
  </update>

  <!-- 更新权限 -->
  <update id="updateAdmin"    parameterType="com.yunchao.hsh.dto.resp.SysUserResp" >
    update sys_user
    set ROLE_ID = #{roleId,jdbcType=BIGINT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <!-- 更新密码 -->
  <update id="updatePassword"    parameterType="com.yunchao.hsh.model.SysUser">
    update sys_user
    set PASSWORD = #{password,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <!-- 根据角色ID查询用户 -->
  <select id="findByRoleIDUser" resultMap="SysUserResp" parameterType="java.lang.Long">
    select
    <include refid="Base_Column_List_u" />,r.NAME role_name
    from SYS_USER u
    LEFT JOIN SYS_ROLE r on u.ROLE_ID = r.ID
    where  u.ROLE_ID =#{roleID}
  </select>

  <!-- 更改用户的锁定状态 -->
  <update id="updateUserLock"  parameterType="com.yunchao.hsh.dto.resp.SysUserResp">
    update sys_user
    set USER_LOCK  = #{userLock,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>

  <!-- 初始化用户的密码 -->
  <update id="initPassword"  parameterType="com.yunchao.hsh.dto.resp.SysUserResp">
    update sys_user
    set PASSWORD  = #{password,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>
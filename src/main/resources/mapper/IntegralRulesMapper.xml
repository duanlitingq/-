<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunchao.hsh.dao.IntegralRulesMapper" >
  <resultMap id="BaseResultMap" type="com.yunchao.hsh.model.IntegralRules" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="integral_name" property="integralName" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="DOUBLE" />
    <result column="Introduction" property="Introduction" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="cus_num_1" property="cusNum1" jdbcType="VARCHAR" />
    <result column="cus_num_2" property="cusNum2" jdbcType="VARCHAR" />
    <result column="cus_num_3" property="cusNum3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, integral_name, integral, Introduction, create_time, cus_num_1, cus_num_2, cus_num_3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yunchao.hsh.model.IntegralRulesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from integral_rules
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from integral_rules
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from integral_rules
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yunchao.hsh.model.IntegralRulesExample" >
    delete from integral_rules
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yunchao.hsh.model.IntegralRules" >
    insert into integral_rules (id, code, integral_name, 
      integral, Introduction, create_time,
      cus_num_1, cus_num_2, cus_num_3
      )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{integralName,jdbcType=VARCHAR}, 
      #{integral,jdbcType=DOUBLE}, #{Introduction,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{cusNum1,jdbcType=VARCHAR}, #{cusNum2,jdbcType=VARCHAR}, #{cusNum3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yunchao.hsh.model.IntegralRules" >
    insert into integral_rules
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="integralName != null" >
        integral_name,
      </if>
      <if test="integral != null" >
        integral,
      </if>
      <if test="Introduction != null" >
        Introduction,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="cusNum1 != null" >
        cus_num_1,
      </if>
      <if test="cusNum2 != null" >
        cus_num_2,
      </if>
      <if test="cusNum3 != null" >
        cus_num_3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="integralName != null" >
        #{integralName,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        #{integral,jdbcType=DOUBLE},
      </if>
      <if test="Introduction != null" >
        #{Introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cusNum1 != null" >
        #{cusNum1,jdbcType=VARCHAR},
      </if>
      <if test="cusNum2 != null" >
        #{cusNum2,jdbcType=VARCHAR},
      </if>
      <if test="cusNum3 != null" >
        #{cusNum3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yunchao.hsh.model.IntegralRulesExample" resultType="java.lang.Integer" >
    select count(*) from integral_rules
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update integral_rules
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.integralName != null" >
        integral_name = #{record.integralName,jdbcType=VARCHAR},
      </if>
      <if test="record.integral != null" >
        integral = #{record.integral,jdbcType=DOUBLE},
      </if>
      <if test="record.Introduction != null" >
        Introduction = #{record.Introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cusNum1 != null" >
        cus_num_1 = #{record.cusNum1,jdbcType=VARCHAR},
      </if>
      <if test="record.cusNum2 != null" >
        cus_num_2 = #{record.cusNum2,jdbcType=VARCHAR},
      </if>
      <if test="record.cusNum3 != null" >
        cus_num_3 = #{record.cusNum3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update integral_rules
    set id = #{record.id,jdbcType=BIGINT},
      code = #{record.code,jdbcType=VARCHAR},
      integral_name = #{record.integralName,jdbcType=VARCHAR},
      integral = #{record.integral,jdbcType=DOUBLE},
      Introduction = #{record.Introduction,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      cus_num_1 = #{record.cusNum1,jdbcType=VARCHAR},
      cus_num_2 = #{record.cusNum2,jdbcType=VARCHAR},
      cus_num_3 = #{record.cusNum3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunchao.hsh.model.IntegralRules" >
    update integral_rules
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="integralName != null" >
        integral_name = #{integralName,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=DOUBLE},
      </if>
      <if test="Introduction != null" >
        Introduction = #{Introduction,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cusNum1 != null" >
        cus_num_1 = #{cusNum1,jdbcType=VARCHAR},
      </if>
      <if test="cusNum2 != null" >
        cus_num_2 = #{cusNum2,jdbcType=VARCHAR},
      </if>
      <if test="cusNum3 != null" >
        cus_num_3 = #{cusNum3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunchao.hsh.model.IntegralRules" >
    update integral_rules
    set code = #{code,jdbcType=VARCHAR},
      integral_name = #{integralName,jdbcType=VARCHAR},
      integral = #{integral,jdbcType=DOUBLE},
      Introduction = #{Introduction,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      cus_num_1 = #{cusNum1,jdbcType=VARCHAR},
      cus_num_2 = #{cusNum2,jdbcType=VARCHAR},
      cus_num_3 = #{cusNum3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>